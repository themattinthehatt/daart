[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "daart"
version = "1.2.0"  # Update the version according to your source
description = "A collection of action segmentation tools for analyzing behavioral data"
license = "MIT"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Matt Whiteway" },
]

keywords = ["machine learning", "action segmentation", "computer_vision"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
]

dependencies = [
    'ipykernel',
    'jupyter',
    'matplotlib',
    'numpy (<2.0.0)',  # compatability issues w/ pandas as of June 2024
    'opencv-python-headless',
    'pandas',
    'pytest',
    'pyyaml',
    'scikit-learn',
    'scipy (>=1.2.0)',
    'seaborn',
    'tables',
    'test-tube',
    'torch',
    'tqdm',
    'typeguard',
]

[project.urls]
repository = "https://github.com/themattinthehatt/daart"
documentation = "https://github.com/themattinthehatt/daart"


# project.dependencies are used for metadata when building the project, tool.poetry.dependencies is only used to enrich
# project.dependencies for locking
[tool.poetry.dependencies]
python = ">=3.10,<3.13"

[tool.poetry.scripts]
daart = "daart.cli.main:main"

[project.optional-dependencies]
dev = [
    "flake8-pyproject",
    "isort",
    "pytest",
    "pytest-html",
    "requests",
    "sphinx",
    "sphinx_rtd_theme",
    "sphinx-rtd-dark-mode",
    "sphinx-automodapi",
    "sphinx-copybutton",
]

[tool.isort]
line_length = 99
profile = "black"
src_paths = ["daart", "tests"]

[tool.flake8]
max-line-length = 99
extend-ignore = ["E203", "W503", "F722", "F821"]  # Optional: common ignores for black compatibility
exclude = [
    ".git",
    "__pycache__",
    "__init__.py",
    "build",
    "dist",
    "docs/",
    "scripts/",
    "examples/",
    "daart_scratch/",
    ".venv",
    "venv"
]

[tool.pytest.ini_options]
testpaths = "tests"
generate_report_on_test = "True"
